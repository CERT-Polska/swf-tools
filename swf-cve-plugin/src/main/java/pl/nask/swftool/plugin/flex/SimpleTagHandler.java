/*
 * Copyright (c) NASK, NCSC
 * 
 * This file is part of HoneySpider Network 2.1.
 * 
 * This is a free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2003-2007 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////

package pl.nask.swftool.plugin.flex;

import flash.swf.Dictionary;
import flash.swf.Header;
import flash.swf.Tag;
import flash.swf.TagHandler;
import flash.swf.tags.CSMTextSettings;
import flash.swf.tags.DebugID;
import flash.swf.tags.DefineBinaryData;
import flash.swf.tags.DefineBits;
import flash.swf.tags.DefineBitsJPEG3;
import flash.swf.tags.DefineBitsLossless;
import flash.swf.tags.DefineButton;
import flash.swf.tags.DefineButtonCxform;
import flash.swf.tags.DefineButtonSound;
import flash.swf.tags.DefineEditText;
import flash.swf.tags.DefineFont1;
import flash.swf.tags.DefineFont2;
import flash.swf.tags.DefineFont3;
import flash.swf.tags.DefineFont4;
import flash.swf.tags.DefineFontAlignZones;
import flash.swf.tags.DefineFontInfo;
import flash.swf.tags.DefineFontName;
import flash.swf.tags.DefineMorphShape;
import flash.swf.tags.DefineScalingGrid;
import flash.swf.tags.DefineSceneAndFrameLabelData;
import flash.swf.tags.DefineShape;
import flash.swf.tags.DefineSound;
import flash.swf.tags.DefineSprite;
import flash.swf.tags.DefineText;
import flash.swf.tags.DefineVideoStream;
import flash.swf.tags.DoABC;
import flash.swf.tags.DoAction;
import flash.swf.tags.DoInitAction;
import flash.swf.tags.EnableDebugger;
import flash.swf.tags.ExportAssets;
import flash.swf.tags.FileAttributes;
import flash.swf.tags.FrameLabel;
import flash.swf.tags.GenericTag;
import flash.swf.tags.ImportAssets;
import flash.swf.tags.Metadata;
import flash.swf.tags.PlaceObject;
import flash.swf.tags.ProductInfo;
import flash.swf.tags.RemoveObject;
import flash.swf.tags.ScriptLimits;
import flash.swf.tags.SetBackgroundColor;
import flash.swf.tags.SetTabIndex;
import flash.swf.tags.ShowFrame;
import flash.swf.tags.SoundStreamHead;
import flash.swf.tags.StartSound;
import flash.swf.tags.SymbolClass;
import flash.swf.tags.VideoFrame;

/**
 * Defines the API for SWF tag handlers.
 *
 * @author Clement Wong
 */
public class SimpleTagHandler extends TagHandler
{
	public void any( Tag tag ) {
	}

	public void setOffsetAndSize( int offset, int size )
	{
	}

    public void productInfo(ProductInfo tag)
    {
    }

	public void header(Header h)
	{
	}

    public void fileAttributes(FileAttributes tag)
    {
    }

    public void metadata(Metadata tag)
    {
    }

    public void showFrame(ShowFrame tag)
	{
	}

	public void defineShape(DefineShape tag)
	{
	}

	public void placeObject(PlaceObject tag)
	{
	}

	public void removeObject(RemoveObject tag)
	{
	}

    public void defineBinaryData(DefineBinaryData tag)
    {
    }

	public void defineFontName(DefineFontName tag)
	{
	}

    public void defineBits(DefineBits tag)
	{
	}

	public void defineButton(DefineButton tag)
	{
	}

	public void jpegTables(GenericTag tag)
	{
	}

	public void setBackgroundColor(SetBackgroundColor tag)
	{
	}

	public void defineFont(DefineFont1 tag)
	{
	}

    public void defineFontAlignZones(DefineFontAlignZones tag)
    {
    }

    public void csmTextSettings(CSMTextSettings tag)
    {
    }

	public void defineText(DefineText tag)
	{
	}

    public void defineSceneAndFrameLabelData(DefineSceneAndFrameLabelData tag)
    {
    }

    public void doAction(DoAction tag)
	{
	}

	public void defineFontInfo(DefineFontInfo tag)
	{
	}

	public void defineSound(DefineSound tag)
	{
	}

	public void startSound(StartSound tag)
	{
	}

	public void defineButtonSound(DefineButtonSound tag)
	{
	}

	public void soundStreamHead(SoundStreamHead tag)
	{
	}

	public void soundStreamBlock(GenericTag tag)
	{
	}

	public void defineBitsLossless(DefineBitsLossless tag)
	{
	}

	public void defineBitsJPEG2(DefineBits tag)
	{
	}

	public void defineShape2(DefineShape tag)
	{
	}

	public void defineButtonCxform(DefineButtonCxform tag)
	{
	}

	public void protect(GenericTag tag)
	{
	}

	public void placeObject2(PlaceObject tag)
	{
	}

    public void placeObject3(PlaceObject tag)
    {
    }

    public void removeObject2(RemoveObject tag)
	{
	}

	public void defineShape3(DefineShape tag)
	{
	}

    public void defineShape4(DefineShape tag)
    {
    }
	public void defineText2(DefineText tag)
	{
	}

	public void defineButton2(DefineButton tag)
	{
	}

	public void defineBitsJPEG3(DefineBitsJPEG3 tag)
	{
	}

	public void defineBitsLossless2(DefineBitsLossless tag)
	{
	}

	public void defineEditText(DefineEditText tag)
	{
	}

	public void defineSprite(DefineSprite tag)
	{
	}

    public void defineScalingGrid(DefineScalingGrid tag)
    {
    }

	public void frameLabel(FrameLabel tag)
	{
	}

	public void soundStreamHead2(SoundStreamHead tag)
	{
	}

	public void defineMorphShape(DefineMorphShape tag)
	{
	}

	public void defineMorphShape2(DefineMorphShape tag)
	{
	}

	public void defineFont2(DefineFont2 tag)
	{
	}

    public void defineFont3(DefineFont3 tag)
    {
    }

    public void defineFont4(DefineFont4 tag)
    {
    }

	public void exportAssets(ExportAssets tag)
	{
	}

	public void symbolClass(SymbolClass tag)
	{
	}

	public void importAssets(ImportAssets tag)
	{
	}

	public void importAssets2(ImportAssets tag)
	{
	}

	public void enableDebugger(EnableDebugger tag)
	{
	}

	public void doInitAction(DoInitAction tag)
	{
	}

	public void defineVideoStream(DefineVideoStream tag)
	{
	}

	public void videoFrame(VideoFrame tag)
	{
	}

	public void defineFontInfo2(DefineFontInfo tag)
	{
	}

	public void enableDebugger2(EnableDebugger tag)
	{
	}

	public void debugID(DebugID tag)
	{
	}

	public void unknown(GenericTag tag)
	{
	}

    /**
     * called when we are done, no more tags coming
     */
    public void finish()
    {
    }

    public void setDecoderDictionary(Dictionary dict)
    {
    }

    public void error(String s)
    {
    }

    public void scriptLimits(ScriptLimits tag)
    {
    }

    public void setTabIndex(SetTabIndex tag)
    {
    }

	public void doABC(DoABC tag)
	{
	}
}
